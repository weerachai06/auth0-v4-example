name: 'Security Scanning'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # First set up Node.js explicitly to LTS version
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.0 # LTS version that's fully compatible with pnpm

      # Then set up PNPM after Node.js
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.2
          run_install: false

      # Manually set up caching
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Install dependencies with verbose flag to see more details
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # pnpm audit - Check for package vulnerabilities
      - name: Run pnpm audit
        run: pnpm audit --audit-level=high

      # ESLint security plugins check
      - name: Run ESLint
        run: pnpm eslint . --ext .js,.jsx,.ts,.tsx

      # Dependency scanning
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      # Secrets scanning
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.46.3
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      # CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
